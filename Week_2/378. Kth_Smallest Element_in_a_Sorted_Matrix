/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        // vector for ans
        vector<int> list;
        // recursive function for inorder traversal
        traverse(root, list);

        return list[k-1];
    }
    void traverse(TreeNode* root, vector<int>& list){
        // terminate condition
        if(root == nullptr) return ;
        traverse(root->left, list);
        list.push_back(root->val);
        traverse(root->right, list);

        return ;
    }
};
