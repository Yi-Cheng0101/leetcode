class Solution {
public:
    vector<vector<int>> ans;
    vector<vector<int>> combinationSum(vector<int>& nums, int target) {
        vector<int> cur;
        backtrack(nums, cur, target, 0);
        return ans;
    }

    void backtrack(vector<int>& nums, vector<int>& cur, int target, int i){
        if(target == 0){
            ans.push_back(cur);
            return ;
        }
        if(target < 0 || i >= nums.size()){
            return ;
        }
        cur.push_back(nums[i]);
        backtrack(nums, cur, target - nums[i], i);
        cur.pop_back();
        backtrack(nums, cur, target, i+1);
    }
};
