/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        queue<TreeNode*> queue;
        vector<int> ans;
        if(root == nullptr) return ans;

        queue.push(root);
        while(!queue.empty()){
            int length = queue.size();
            for(int i=0; i<length; i++){
                TreeNode* tmp = queue.front();
                if(tmp->left) queue.push(tmp->left);
                if(tmp->right) queue.push(tmp->right);
                
                if(i == length-1) ans.push_back(tmp->val);
                queue.pop();
            }
        }


        return ans;
    }
};
