/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;

        // if root is empty
        if(root == nullptr) return ans;
        
        queue<TreeNode*> q;
        q.push(root);
        
        while(!q.empty()){
            // key!!!!! to get how many numbers in the same level
            int size = q.size();

            // traverse the same level
            vector<int> tmp; 
            for(int i=0; i<size; i++){
                TreeNode* current = q.front();
                // left
                if(current->left != nullptr){
                    q.push(current->left);
                }
                // right
                if(current->right != nullptr){
                    q.push(current->right);
                }
                tmp.push_back(current->val);
                q.pop();
            }
            ans.push_back(tmp);
        }

        return ans;
    }
};
